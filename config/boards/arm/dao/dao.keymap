/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define FUN 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
        // -------------------------------------------------------------------------------------------------------------------------------------------------- //
        // | ESC           |  Q    |  W   |  E         |  R          |  T    |---------|  Y          |  U        |  I        |  O    |  P      |   [        | //
        // | LSHFT TAB     |  A    |  S   |  D         |  F          |  G    |---------|  H          |  J        |  K        |  L    |  ;      | RSHFT "    | //
        // | LCTRL MENU    |  Z    |  X   |  C         |  V          |  B    |---------|  N          |  M        |  ,        |  .    |  /      | RCTRL BKSP | //
        //                                |  LGUI      |  NAV SPACE  |  LALT |---------| SYM RET     |  NAV BKSP |  FUN DEL  |                                //
        // -------------------------------------------------------------------------------------------------------------------------------------------------- //
  &none   &kp ESC           &kp Q  &kp W  &kp E         &kp R          &kp T            &kp Y        &kp U         &kp I      &kp O   &kp P    &kp LBKT        &none
          &mt LSHFT TAB     &kp A  &kp S  &kp D         &kp F          &kp G            &kp H        &kp J         &kp K      &kp L   &kp SEMI &mt RSHFT SQT
          &mt LCTRL C_MENU  &kp Z  &kp X  &kp C         &kp V          &kp B            &kp N        &kp M         &kp COMMA  &kp DOT &kp FSLH &mt RCTRL BSPC
                                          &kp LEFT_GUI  &lt NAV SPACE  &kp LALT         &lt SYM RET  &lt NAV BSPC  &lt FUN DEL
                        >;
                };
                navigation_layer {
                        bindings = <
        // -------------------------------------------------------------------------------------------------------------------------------------------------- //
        // | ESC    |  1        |  2      |  3          |  4        |  5      |-----------| 6       |  7       |  8       |  9       |  0      | BKSP  |      //
        // | LSHFT  |  6        |  7      |  8          |  9        |  0      |-----------| LEFT    |  DOWN    |  UP      | RIGHT    |  ESC    | RET   |      //
        // | LCTRL  |  LC(Z)    |  LC(X)  |  LC(INS)    |  LS(INS)  |  LC(A)  |-----------| HOME    |  PG_DN   |  PG_UP   | END      |  PRCNT  | LCTRL |      //
        //                                |  LGUI       |  SPACE    |  LALT   |-----------| RET     |  BKSP    |  DEL     |                                   //
        // -------------------------------------------------------------------------------------------------------------------------------------------------- //
  &none   &kp ESC    &kp N1     &kp N2     &kp N3        &kp N4       &kp N5               &kp N6    &kp N7     &kp N8     &kp N9     &kp N0    &kp BSPC  &none
          &kp LSHFT  &kp N6     &kp N7     &kp N8        &kp N9       &kp N0               &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp ESC   &kp RET
          &kp LCTRL  &kp LC(Z)  &kp LC(X)  &kp LC(INS)   &kp LS(INS)  &kp LC(A)            &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp PRCNT &kp RCTRL
                                           &kp LEFT_GUI  &kp SPACE    &kp LALT             &kp RET   &kp BSPC   &kp DEL
                       >;
                };

                symbol_layer {
                        bindings = <
        // ------------------------------------------------------------------------------------------------------------------------------------------------------------------------- //
        // | ESC     |  LS(1)      |  LS(2)      |  LS(3)     |  LS(4)      | LS(5) |------------|  LS(6)       |  LS(7)       |  LS(8)      |  LS(9)       |  LS(0)      | BKSP  |  //
        // | LSHFT   |  BT 1       |  BT 2       |  BT 3      |  BT LOAD    | BT CLR|------------|  -           |  =           | \           |  [           |  ]          | `     |  //
        // | LCTRL   |  BRIGHT-    |  BRIGHT+    |            |  NUM_LOCK   | PAUSE |------------|  LS(-)       |  LS(=)       | LS(\)       |  LS([)       |  LS(])      | LS(`) |  //
        //                                       |  LGUI      |  SPACE      | LALT  |------------|              |  BKSP        | DEL         |                                       //
        // ------------------------------------------------------------------------------------------------------------------------------------------------------------------------- //
  &none   &kp ESC    &kp LS(N1)    &kp LS(N2)    &kp LS(N3)    &kp LS(N4)    &kp LS(N5)           &kp LS(N6)     &kp LS(N7)     &kp LS(N8)    &kp LS(N9)    &kp LS(N0)    &kp BSPC       &none
          &kp LSHFT  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bootloader   &bt BT_CLR           &kp MINUS      &kp EQUAL      &kp BSLH      &kp LBKT      &kp RBKT      &kp TILDE
          &kp LCTRL  &kp C_BRI_UP  &kp C_BRI_DN  &none         &kp KP_NUM    &kp PAUSE_BREAK      &kp LS(MINUS)  &kp LS(EQUAL)  &kp LS(BSLH)  &kp LS(LBKT)  &kp LS(RBKT)  &kp LS(TILDE)
                                                 &kp LEFT_GUI  &kp SPACE     &kp LALT             &none          &kp BSPC       &kp DEL
                        >;
                };
                func_layer {
                        bindings = <
        // ------------------------------------------------------------------------------------------------------------------------------------------------------- //
        // | ESC     |  F1         |  F2        |  F3        |  F4       | F5    |------------|  NUM LOCK       |         |       |      |  NUM -     |  BKSP   |  //
        // | LSHFT   |  F6         |  F7        |  F8        |  F9       | F10   |------------|  NUM /          |         |       |      |  NUM +     |  RSHFT  |  //
        // | LCTRL   |  VOL-       |  VOL+      |  MUTE      |  F11      | F12   |------------|  NUM *          |  ]      |       |      |  NUM RET   |  RCTRL  |  //
        //                                      |  LGUI      |  SPACE    | LALT  |------------|  RET            |  BKSP   |       |      |                         //
        // ------------------------------------------------------------------------------------------------------------------------------------------------------- //
  &none   &kp ESC    &kp F1        &kp F2        &kp F3        &kp F4     &kp F5                &kp KP_NUM       &none     &none   &none  &kp KP_MINUS  &kp BSPC  &none
          &kp LSHFT  &kp F6        &kp F7        &kp F8        &kp F9     &kp F10               &kp KP_SLASH     &none     &none   &none  &kp KP_PLUS   &kp RSHFT
          &kp LCTRL  &kp K_VOL_DN  &kp K_VOL_UP  &kp K_MUTE    &kp F11    &kp F12               &kp KP_ASTERISK  &kp RBKT  &none   &none  &kp KP_ENTER  &kp RCTRL
                                                 &kp LEFT_GUI  &kp SPACE  &kp LALT              &kp RET          &kp BSPC  &none
                       >;
                };
        };
};
