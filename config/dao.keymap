/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    macros {
        ENG: ENG {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LSHIFT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LALT &kp LSHIFT>;

            label = "ENG";
        };

        RUS: RUS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LSHIFT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LALT &kp LSHIFT>;

            label = "RUS";
        };

        ctrlLeft: ctrlLeft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "CTRLLEFT";
        };

        ctrlRight: ctrlRight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "CTRLRIGHT";
        };

        ctrlShiftLeft: ctrlShiftLeft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LC(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LC(LEFT_SHIFT)>;

            label = "CTRLSHIFTLEFT";
        };

        ctrlShiftRight: ctrlShiftRight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LC(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LC(LEFT_SHIFT)>;

            label = "CTRLSHIFTRIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_ALT RBKT  &kp Q  &kp W  &kp E        &kp R            &kp T        &kp Y        &kp U           &kp I        &kp O    &kp P         &mt RALT LBKT
&mt LCTRL GRAVE    &kp A  &kp S  &kp D        &kp F            &kp G        &kp H        &kp J           &kp K        &kp L    &kp SEMI      &mt RCTRL SQT
&kp LWIN           &kp Z  &kp X  &kp C        &kp V            &kp B        &kp N        &kp M           &kp COMMA    &kp DOT  &kp KP_COMMA  &kp KP_DOT
                                 &lt RSE TAB  &mt LSHFT SPACE  &lt LWR RET  &lt LWR ESC  &mt RSHFT BSPC  &lt RSE DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LALT RA(RIGHT_BRACKET)  &kp RA(Q)  &kp ASTERISK  &kp MINUS       &kp PLUS   &kp RA(T)             &kp RA(LS(Y))          &kp N7  &kp N8       &kp N9  &kp RA(BACKSLASH)  &kp RA(LEFT_BRACKET)
&mt LCTRL RA(GRAVE)         &kp RA(A)  &kp RA(S)     &RUS            &ENG       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N4  &kp N5       &kp N6  &kp RA(SEMICOLON)  &mt RCTRL RA(SQT)
&kp RA(RS(L))               &kp RA(Z)  &kp RA(X)     &kp UNDERSCORE  &kp EQUAL  &kp RA(B)             &kp RA(Y)              &kp N1  &kp N2       &kp N3  &kp N0             &kp RA(RS(LEFT_BRACKET))
                                                     &lt ADJ TAB     &trans     &trans                &trans                 &trans  &lt ADJ DEL
            >;
        };

        raise_layer {
            bindings = <
&kp LALT    &kp RA(Q)       &kp F7  &kp F8  &kp F9  &kp F12      &kp C_VOL_UP  &ctrlShiftLeft  &kp UP           &ctrlShiftRight  &kp PG_UP  &kp INS
&kp LCTRL   &kp RA(DOLLAR)  &kp F4  &kp F5  &kp F6  &kp F11      &kp HOME      &kp LEFT        &kp DOWN         &kp RIGHT        &kp END    &mt RCTRL K_APP
&kp LSHIFT  &kp RA(Z)       &kp F1  &kp F2  &kp F3  &kp F10      &kp C_VOL_DN  &ctrlLeft       &kp PRINTSCREEN  &ctrlRight       &kp PG_DN  &kp RSHIFT
                                    &trans  &trans  &lt ADJ RET  &lt ADJ ESC   &trans          &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none  &none  &none         &none         &none         &kp KP_NUMLOCK  &kp CAPSLOCK  &kp SCROLLLOCK  &none  &none  &bootloader
&bt BT_CLR   &none  &none  &bt BT_SEL 4  &bt BT_SEL 2  &bt BT_SEL 0  &bt BT_SEL 0    &bt BT_SEL 2  &bt BT_SEL 4    &none  &none  &bt BT_CLR
&sys_reset   &none  &none  &none         &bt BT_SEL 3  &bt BT_SEL 1  &bt BT_SEL 1    &bt BT_SEL 3  &none           &none  &none  &sys_reset
                           &trans        &none         &trans        &trans          &none         &trans
            >;
        };
    };
};
